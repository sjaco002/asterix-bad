/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
* Description  : Create Procedure Check Metadata
* Expected Res : Success
* Date         : Jan 2017
* Author       : Steven Jacobs
*/

drop dataverse two if exists;
drop dataverse channels if exists;
create dataverse channels;
use channels;
create type myLocation as {
  id: int
};
create dataset UserLocations(myLocation)
primary key id;

create function really_contains(word,letter){
contains(word,letter)
};

create dataverse two;
use two;

create function really_contains(word,letter){
contains(word,letter)
};

create type myLocation as {
  id: int
};
create dataset UserLocations(myLocation)
primary key id;

create procedure selectSome(r, otherRoom) {
select roomNumber from channels.UserLocations
where roomNumber = r
or roomNumber = otherRoom
and channels.really_contains(roomNumber,"l")
order by id
};

create procedure deleteSome(r, otherRoom) {
delete from channels.UserLocations
where roomNumber = r
or roomNumber = otherRoom
and channels.really_contains(roomNumber,"l")
};

create procedure addMe() {
  insert into channels.UserLocations([
    {"timeStamp":current_datetime(), "roomNumber":222}]
  )
};

create procedure localSelectSome(r, otherRoom) {
select roomNumber from UserLocations
where roomNumber = r
or roomNumber = otherRoom
and really_contains(roomNumber,"l")
order by id
};

create procedure localDeleteSome(r, otherRoom) {
delete from UserLocations
where roomNumber = r
or roomNumber = otherRoom
and really_contains(roomNumber,"l")
};

create procedure localAddMe() {
  insert into UserLocations([
    {"timeStamp":current_datetime(), "roomNumber":222}]
  )
};